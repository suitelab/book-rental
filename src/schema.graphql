scalar Date

type User {
    id: ID!
    name: String!
    lateCount: Int!
    latestLateAt: Date
}

enum Category {
  Novel
  Poetry
  Humanity
  Essay
  Travel
}

type Book {
    id: ID!
    name: String!
    author: String!
    price: Int
    publishAt: Date
    category: Category!
    locate: String!
}

type Rental {
    id: ID!
    user: User!
    book: Book!
    startAt: Date!
    endAt: Date!
}

type Query {
    users: [User]
    books: [Book]
    rentals: [Rental]
    getUser(
        id: ID
        name: String
        lateCount: Int
        latestLateAt: Date
    ): User
    getBook(
        id: ID
        name: String
        author: String
    ): Book
    getRentableBook(
        id: ID
        
    ): Book
}

type Mutation {
    addUser(
        name: String!
        lateCount: Int!
        latestLateAt: Date
    ): User!
    editUser(
        id: ID!
        name: String
        lateCount: Int
        latestLateAt: Date
    ): Int
    deleteUser(
        id: ID!
    ): Int
    addBook(
        name: String!
        author: String!
        price: Int!
        publishAt: Date
        category: Category!
        locate: String!
    ): Book!
    rentABook(
        user_id: ID!
        book_id: ID!
        startAt: Date!
        endAt: Date!
    ): Rental!
}